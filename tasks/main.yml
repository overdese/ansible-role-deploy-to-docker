---

- name: install pip packages
  pip:
    name:
      - docker
      - docker-compose

- name: login to docker registry
  community.docker.docker_login:
    username: "{{ dtd_registry_username }}"
    password: "{{ dtd_registry_password }}"
    registry: "{{ dtd_registry }}"
    reauthorize: yes
  when: dtd_registry != ""

- name: init deploy root
  community.general.deploy_helper:
    path: "{{ dtd_app_root }}"
    release: "{{ dtd_app_version }}"

- name: debug 1
  debug:
    msg: "{{ deploy_helper.current_path }} -- {{ dtd_app_root }} - {{ dtd_templates_folder }} - {{ dtd_app_version }}"


- name: deploy and up app with docker-compose
  block:
    - name: create release directory
      file:
        dest: "{{ deploy_helper.new_release_path }}"
        state: directory
        mode: 0770

    - name: create files from templates
      template:
        src:  "{{ item }}"
        dest: "{{ deploy_helper.new_release_path }}/{{ item | basename | regex_replace('\\.j2$','') }}"
        mode: 0770
      with_fileglob:
        - "{{ dtd_templates_folder }}/*.j2"

    - name: check docker-compose.yml from previous version
      stat:
        path: "{{ deploy_helper.current_path }}/docker-compose.yml"
      register: old_docker_compose_yml

    - name: down existing services from previous version
      community.docker.docker_compose:
        project_src: "{{ deploy_helper.previous_release_path }}"
        remove_orphans: yes
        state: absent
      when: old_docker_compose_yml.stat.exists

    - name: create and start services
      community.docker.docker_compose:
        project_src: "{{ deploy_helper.new_release_path }}"
        build: no
      register: output

    - ansible.builtin.debug:
        var: output

    - community.general.deploy_helper:
        path: "{{ dtd_app_root }}"
        release: "{{ dtd_app_version }}"
        state: finalize
        keep_releases: "{{ dtd_app_keep_releases }}"

  when: dtd_state == "present" and dtd_app_root != "" and dtd_app_version != "" and dtd_templates_folder != ""


# stop services by docker-compose block
- name: stop app with docker-compose
  block:
    - name: down existing services
      community.docker.docker_compose:
        project_src: "{{ deploy_helper.previous_release_path }}"
        stopped: yes
        remove_orphans: yes

  when: dtd_state == "stopped" and dtd_app_root != "" and dtd_app_version != ""


# WARN: absent remove all data!!
- name: absent app
  block:
    - name: down existing services
      community.docker.docker_compose:
        project_src: "{{ deploy_helper.previous_release_path }}"
        stopped: yes
        remove_orphans: yes
        state: absent

    - name: remove {{ dtd_app_root }}
      community.general.deploy_helper:
        path: "{{ dtd_app_root }}"
        state: absent

  when: dtd_state == "absent" and dtd_app_root != "" and dtd_app_version != ""


- name: logout from docker registry
  community.docker.docker_login:
    state: absent
  when: dtd_registry != ""
...
